---
- hosts: localhost
  gather_facts: false
  tasks:
    - name: Check for pre-requisite binaries presence
      ansible.builtin.shell: |
        which "{{ item }}"
      with_items:
        - skopeo
        - oc
        - podman

    - name: Check that INDEX_IMAGES env variable is set
      ansible.builtin.fail:
        msg: "INDEX_IMAGES: '{{ iib_images }}' is not set"
      failed_when:
        (iib_images is not defined or iib_images | length == 0)
      
    - name: Set images array
      ansible.builtin.set_fact:
        iib_image_list: "{{ iib_images.split(',') }}"

    - name: Set operator array
      ansible.builtin.set_fact:
        operator_list: "{{ operator.split(',') }}"

    - name: Check that images array and operators array have same length
      ansible.builtin.assert:
        that:
          iib_image_list | length == operator_list | length
        fail_msg: "INDEX_IMAGES and OPERATOR need to have the same number of elements"

    - name: Set channels array
      ansible.builtin.set_fact:
        channel_list: "{{ channels.split(',') }}"
      when: channels | length > 0

    - name: Set list of empty strings
      ansible.builtin.set_fact:
        channel_list: "{{ range(0, operator_list | length) | map('regex_replace', '.*', '') | list }}"
      when: channels | length == 0

    # Creates a dict like (channel set to "" signifies to use the default channel):
    # "advanced-cluster-management": {
    #   "iib": "713808",
    #   "channel": "",
    #   "iib_image": "registry-proxy.engineering.redhat.com/rh-osbs/iib:713808"
    # },
    # "multicluster-engine": {
    #   "iib": "713809",
    #   "channel": "",
    #   "iib_image": "registry-proxy.engineering.redhat.com/rh-osbs/iib:713809"
    # }
    - name: Set IIB dict
      ansible.builtin.set_fact:
        iib_dict: "{{ iib_dict | default({}) | combine({item.0: {'channel': item.1, 'iib_image': item.2, 'iib': item.2.split(':')[-1]}}) }}"
      with_together:
        - "{{ operator_list }}"
        - "{{ channel_list }}"
        - "{{ iib_image_list }}"

    - name: Check we can reache the cluster
      ansible.builtin.command: oc cluster-info

    - name: Working with the following IIB data
      ansible.builtin.debug:
        msg: "{{ iib_dict }}"

    - name: Build docker config JSON
      ansible.builtin.set_fact:
        dockerconfig:
          auths: >-
            {{ 
              { 
                iib_dest_registry: {
                  "username": iib_dest_username,
                  "password": iib_dest_password,
                  "auth": (iib_dest_username + ':' + iib_dest_password) | b64encode
                }
              }
            }}

    - name: Get a tempfile for the pull secrets
      ansible.builtin.tempfile:
        state: directory
      register: pull_secrets_tempfolder          

    - name: Write merged docker config file
      copy:
        content: "{{ dockerconfig | to_nice_json }}"
        dest: "{{ pull_secrets_tempfolder.path }}/.dockerconfig.json"
        mode: '0644'

    - name: Set up IIB images in cluster
      ansible.builtin.include_tasks: setup-iib.yml
      with_items: "{{ iib_dict | dict2items }}"
